name: CI

on:
  push:
    branches: [main, develop]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # ① 啟動 Postgres 容器
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: business_monitor_test
        ports:
          - 5432:5432
        # ② options 可插入 docker run 參數 → healthcheck
        options: >-
          --health-cmd="pg_isready -U postgres -d business_monitor_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    # ③ GitHub 會自動等待 service Healthy；再跑步驟
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # cache: 'npm'

      - name: Install deps
        run: npm instal

      - name: Generate Prisma client
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/business_monitor_test
        run: npm run gen:prisma

      - name: Run DB health smoke test (可選)
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/business_monitor_test
        run: npm run smoke:db_health   # 你的 scripts/db_health.ts

      - name: Run unit tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/business_monitor_test
          NEXT_PUBLIC_API_POWERBY: 'BusinessMonitor api 1.0.0'
        run: npm test -- --coverage --selectProjects server

      - name: Upload coverage (optional)
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
