generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "ERD.svg"
  disabled = env("DISABLE_ERD")
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id                       Int                @id @default(autoincrement())
  name                     String             @map("name")
  registrationNo           String             @unique @map("registration_no")
  parentRegNo              String?            @map("parent_reg_no")
  representative           String?            @map("representative")
  registrationCountry      String?            @map("registration_country")
  establishedDate          DateTime?          @map("established_date")
  capitalAmount            Decimal?           @map("capital_amount") @db.Decimal(30, 8)
  paidInCapital            Decimal?           @map("paid_in_capital") @db.Decimal(30, 8)
  capitalRanking           Int?               @map("capital_ranking")
  address                  String?            @map("address")
  websiteUrl               String?            @map("website_url")
  logoUrl                  String?            @map("logo_url")
  registrationAgency       String?            @map("registration_agency")
  status                   String?            @map("status")
  organizationType         String?            @map("organization_type")
  businessItems            Json?              @map("business_items")
  contributions            Json?              @map("contributions")
  shareholdingStatus       String?            @map("shareholding_status")
  sharePrice               Decimal?           @map("share_price") @db.Decimal(30, 8)
  totalIssuedShares        BigInt?            @map("total_issued_shares")
  multipleVotingRights     String?            @map("multiple_voting_rights")
  specialVotingRights      String?            @map("special_voting_rights")
  lastChangeDate           DateTime?          @map("last_change_date")
  lastApprovedChange       DateTime?          @map("last_approved_change")
  statusDate               DateTime?          @map("status_date")
  statusDocNo              String?            @map("status_doc_no")
  foreignCompanyName       String?            @map("foreign_company_name")
  directors                Json?              @map("directors")
  managers                 Json?              @map("managers")
  suspensionStartDate      DateTime?          @map("suspension_start_date")
  suspensionEndDate        DateTime?          @map("suspension_end_date")
  suspensionAgency         String?            @map("suspension_agency")
  oldBusinessItemsUrl      String?            @map("old_business_items_url")
  createdAt                DateTime           @default(now()) @map("created_at")
  updatedAt                DateTime           @updatedAt @map("updated_at")
  announcements            Announcement[]
  businessScopes           BusinessScope[]
  comments                 Comment[]
  histories                CompanyHistory[]
  investors                CompanyInvestor[]
  relationsAsChild         CompanyRelation[]  @relation("ChildRelations")
  relationsAsParent        CompanyRelation[]  @relation("ParentRelations")
  company_view             CompanyView[]
  financialReports         FinancialReport[]
  governmentTenders        GovernmentTender[]
  importExportData         ImportExportData[]
  marketIndicators         MarketIndicator[]
  news                     News[]
  patents                  Patent[]
  relatedCompaniesAsSource RelatedCompany[]   @relation("CompanyToRelatedCompany")
  relatedCompaniesAsTarget RelatedCompany[]   @relation("CompanyToRelatedCompanyTarget")
  riskFlags                RiskFlag[]
  stockPrices              StockPrice[]
  trademarks               Trademark[]
  industryCodes            IndustryCode[]     @relation("CompanyIndustry")
  politicalActivities      PoliticalActivity[]

  @@index([parentRegNo], map: "idx_company_parent_reg_no")
  @@index([businessItems(ops: JsonbPathOps)], map: "idx_company_business_items_gin", type: Gin)
  @@index([name(ops: raw("gin_trgm_ops"))], map: "idx_company_name_trgm", type: Gin)
  @@index([registrationNo], map: "idx_company_registration_no_like")
  @@index([representative(ops: raw("gin_trgm_ops"))], map: "idx_company_representative_trgm", type: Gin)
  @@map("company")
}

model CompanyRelation {
  id            Int     @id @default(autoincrement())
  parentRegNo   String  @map("parent_reg_no")
  childRegNo    String  @map("child_reg_no")
  relation      String? @map("relation")
  childCompany  Company @relation("ChildRelations", fields: [childRegNo], references: [registrationNo])
  parentCompany Company @relation("ParentRelations", fields: [parentRegNo], references: [registrationNo])

  @@unique([parentRegNo, childRegNo])
  @@map("company_relation")
}

model Investor {
  id               Int               @id @default(autoincrement())
  name             String            @map("name")
  title            String?           @map("title")
  shareholderType  String?           @map("shareholder_type")
  createdAt        DateTime          @default(now()) @map("created_at")
  updatedAt        DateTime          @updatedAt @map("updated_at")
  companyInvestors CompanyInvestor[]

  @@map("investor")
}

model CompanyInvestor {
  id                            Int       @id @default(autoincrement())
  companyId                     Int       @map("company_id")
  investorId                    Int       @map("investor_id")
  position                      String?   @map("position")
  shareRatio                    Decimal?  @map("share_ratio")
  representativeJuridicalPerson String?   @map("representative_juridical_person")
  investmentDate                DateTime? @map("investment_date")
  createdAt                     DateTime  @default(now()) @map("created_at")
  updatedAt                     DateTime  @updatedAt @map("updated_at")
  company                       Company   @relation(fields: [companyId], references: [id])
  investor                      Investor  @relation(fields: [investorId], references: [id])

  @@unique([companyId, investorId])
  @@map("company_investor")
}

model CompanyHistory {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  changeDate   DateTime @map("change_date")
  changeType   String   @map("change_type")
  changeDetail Json     @map("change_detail")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  company      Company  @relation(fields: [companyId], references: [id])

  @@map("company_history")
}

model RelatedCompany {
  id                Int      @id @default(autoincrement())
  companyId         Int      @map("company_id")
  relatedCompanyId  Int      @map("related_company_id")
  relationType      String?  @map("relation_type")
  relatedBusinessId String?  @map("related_business_id")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  company           Company  @relation("CompanyToRelatedCompany", fields: [companyId], references: [id])
  relatedCompany    Company  @relation("CompanyToRelatedCompanyTarget", fields: [relatedCompanyId], references: [id])

  @@unique([companyId, relatedCompanyId])
  @@map("related_company")
}

model StockPrice {
  id         Int      @id @default(autoincrement())
  companyId  Int      @map("company_id")
  date       DateTime @map("date")
  openPrice  Decimal? @map("open_price") @db.Decimal(30, 8)
  highPrice  Decimal? @map("high_price") @db.Decimal(30, 8)
  lowPrice   Decimal? @map("low_price") @db.Decimal(30, 8)
  closePrice Decimal? @map("close_price") @db.Decimal(30, 8)
  volume     Int?     @map("volume")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  company    Company  @relation(fields: [companyId], references: [id])

  @@index([companyId, date])
  @@map("stock_price")
}

model MarketIndicator {
  id                Int      @id @default(autoincrement())
  companyId         Int      @map("company_id")
  date              DateTime @map("date")
  marketCap         Decimal? @map("market_cap")
  peRatio           Decimal? @map("pe_ratio")
  dividendYield     Decimal? @map("dividend_yield")
  investorSentiment Json?    @map("investor_sentiment")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  company           Company  @relation(fields: [companyId], references: [id])

  @@index([companyId, date])
  @@map("market_indicator")
}

model RiskFlag {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  flagType    String   @map("flag_type")
  flagValue   Int      @map("flag_value")
  flaggedDate DateTime @map("flagged_date")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  company     Company  @relation(fields: [companyId], references: [id])

  @@map("risk_flag")
}

model IndustryCode {
  id          Int       @id @default(autoincrement())
  code        String    @unique @map("code")
  description String?   @map("description")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  companies   Company[] @relation("CompanyIndustry")

  @@map("industry_code")
}

model ImportExportData {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  year        Int      @map("year")
  month       String?  @map("month")
  totalImport Decimal? @map("total_import")
  totalExport Decimal? @map("total_export")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  company     Company  @relation(fields: [companyId], references: [id])

  @@map("import_export_data")
}

model GovernmentTender {
  id           Int       @id @default(autoincrement())
  companyId    Int       @map("company_id")
  projectTitle String    @map("project_title")
  agencyName   String?   @map("agency_name")
  awardDate    DateTime? @map("award_date")
  awardAmount  Decimal?  @map("award_amount")
  awarded      Boolean?  @map("awarded")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  company      Company   @relation(fields: [companyId], references: [id])

  @@map("government_tender")
}

model Trademark {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  imageUrl      String?  @map("image_url")
  name          String   @map("name")
  description   String?  @map("description")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  applicationNo String?  @map("application_no")
  status        String?  @map("status")
  company       Company  @relation(fields: [companyId], references: [id])

  @@map("trademark")
}

model Patent {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  description   String?  @map("description")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  applicationNo String?  @map("application_no")
  date          DateTime @map("date")
  kind          String?  @map("kind")
  status        String?  @map("status")
  title         String   @map("title")
  company       Company  @relation(fields: [companyId], references: [id])

  @@map("patent")
}

model FinancialReport {
  id         Int      @id @default(autoincrement())
  companyId  Int      @map("company_id")
  reportType String   @map("report_type")
  period     DateTime @map("period")
  data       Json     @map("data")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  company    Company  @relation(fields: [companyId], references: [id])

  @@index([companyId, reportType, period])
  @@map("financial_report")
}

model Announcement {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  title     String   @map("title")
  date      DateTime @map("date")
  content   String?  @map("content")
  imageUrl  String?  @map("image_url")    // Info: (20250902 - Tzuhan) UI hero 圖
  views     Int      @default(0)          // Info: (20250902 - Tzuhan) 瀏覽數（將來可做累計）
  shares    Int      @default(0)          // Info: (20250902 - Tzuhan) 分享數
  isPinned  Boolean  @default(false)      // Info: (20250902 - Tzuhan) 置頂（列表排序可先 pinned 再 date）
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  company   Company  @relation(fields: [companyId], references: [id])

  @@map("announcement")
}

model BusinessScope {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  code        String   @map("code")
  description String?  @map("description")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  company     Company  @relation(fields: [companyId], references: [id])

  @@index([companyId, code])
  @@map("business_scope")
}

model News {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  title     String   @map("title")
  content   String?  @map("content")
  date      DateTime @map("date")
  imageUrl  String?  @map("image_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lang      String?  @map("lang")
  source    String?  @map("source")
  url       String?  @map("url")
  company   Company  @relation(fields: [companyId], references: [id])

  @@index([companyId, date])
  @@map("news")
}

model Comment {
  id         Int       @id @default(autoincrement())
  companyId  Int       @map("company_id")
  userName   String?   @map("user_name")
  userAvatar String?   @map("user_avatar")
  content    String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  likes      Int       @default(0)
  comments   Int       @default(0)
  shares     Int       @default(0)
  parentId   Int?      @map("parent_id")
  company    Company   @relation(fields: [companyId], references: [id])
  parent     Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies    Comment[] @relation("CommentReplies")

  @@index([companyId, createdAt])
  @@map("comment")
}

model ImportLog {
  id           Int       @id @default(autoincrement())
  folderPath   String    @map("folder_path")
  fileName     String    @map("file_name")
  totalCount   Int       @map("total_count")
  successCount Int       @map("success_count")
  status       String    @map("status")
  startedAt    DateTime? @map("started_at")
  finishedAt   DateTime? @map("finished_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  @@unique([folderPath, fileName], name: "folder_file_unique")
  @@map("import_log")
}

model CompanyView {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  day       DateTime
  ipHash    String   @map("ip_hash")
  sessionId String?  @map("session_id")
  createdAt DateTime @default(now()) @map("created_at")
  company   Company  @relation(fields: [companyId], references: [id])

  @@unique([companyId, day, ipHash], map: "uniq_company_day_ip")
  @@index([companyId, day], map: "idx_company_day")
  @@index([day], map: "idx_view_day")
  @@map("company_view")
}

enum PoliticalType {
  contribution
  donation
}

model PoliticalActivity {
  id         Int           @id @default(autoincrement())
  companyId  Int           @map("company_id")
  event      String        @map("event")
  type       PoliticalType @map("type") @default(donation) // Info: (20250827 - Tzuhan) 預設 donation，方便回填
  amount     Decimal       @db.Decimal(30, 8) @map("amount")
  date       DateTime      @map("date")
  recipient  String?       @map("recipient")
  source     String?       @map("source")      // Info: (20250827 - Tzuhan) 可填資料來源/連結

  createdAt  DateTime      @default(now()) @map("created_at")
  updatedAt  DateTime      @updatedAt      @map("updated_at")

  company    Company       @relation(fields: [companyId], references: [id])

  @@index([companyId, date], map: "idx_pc_company_date")
  @@index([companyId, type, date], map: "idx_pc_company_type_date") // Info: (20250827 - Tzuhan) 給左右分欄各自查
  @@unique([companyId, event, date, recipient, type], map: "uniq_pc_company_event_date_recipient_type") // Info: (20250827 - Tzuhan) 避免重複
  @@map("political_activity")
}

// Info: (20250903 - Tzuhan) 證交所每日「逐檔」行情（含 ETF / 權證等）
model MarketDailyPrice {
  id             Int      @id @default(autoincrement())
  market         String   // Info: (20250903 - Tzuhan) 例如 "TWSE"
  date           DateTime // Info: (20250903 - Tzuhan) 以 UTC 00:00 儲存該交易日
  symbol         String   // Info: (20250903 - Tzuhan) 證券代號，例如 0050、2330、0302P...
  name           String?  // Info: (20250903 - Tzuhan) 證券名稱
  tradeVolume    BigInt?  @map("trade_volume")     // Info: (20250903 - Tzuhan) 成交股數
  tradeValue     Decimal? @db.Decimal(30,0) @map("trade_value") // Info: (20250903 - Tzuhan) 成交金額(元)
  tradeCount     Int?     @map("trade_count")      // Info: (20250903 - Tzuhan) 成交筆數
  openPrice      Decimal? @db.Decimal(20,4) @map("open_price")
  highPrice      Decimal? @db.Decimal(20,4) @map("high_price")
  lowPrice       Decimal? @db.Decimal(20,4) @map("low_price")
  closePrice     Decimal? @db.Decimal(20,4) @map("close_price")
  changeSign     String?  @map("change_sign")      // Info: (20250903 - Tzuhan) '+' | '-' | 'X'（無漲跌）
  changeAmount   Decimal? @db.Decimal(20,4) @map("change_amount")
  finalBidPrice  Decimal? @db.Decimal(20,4) @map("final_bid_price")
  finalBidVolume BigInt?  @map("final_bid_volume")
  finalAskPrice  Decimal? @db.Decimal(20,4) @map("final_ask_price")
  finalAskVolume BigInt?  @map("final_ask_volume")
  peRatio        Decimal? @db.Decimal(10,2) @map("pe_ratio")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt      @map("updated_at")

  @@unique([market, date, symbol], name: "market_date_symbol_unique")
  @@index([market, date, symbol])
  @@map("market_daily_price")
}

// Info: (20250903 - Tzuhan) 證交所每日「分類彙總」：一般股票、ETF、權證… 的 金額/股數/筆數
model MarketDailySummary {
  id          Int      @id @default(autoincrement())
  market      String
  date        DateTime
  category    String   // Info: (20250903 - Tzuhan) 例如 "一般股票"、"ETF"、"台灣存託憑證"...
  tradeValue  Decimal? @db.Decimal(30,0) @map("trade_value")
  tradeVolume BigInt?  @map("trade_volume")
  tradeCount  Int?     @map("trade_count")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt      @map("updated_at")

  @@unique([market, date, category], name: "market_date_category_unique")
  @@index([market, date, category])
  @@map("market_daily_summary")
}
